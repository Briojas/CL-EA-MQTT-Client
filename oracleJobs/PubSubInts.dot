type = "directrequest"
  schemaVersion = 1
  name = "PubSub Ints"
  contractAddress = "0xORACLE_CONTRACT_ADDRESS"
  maxTaskDuration = "0s"
  observationSource = """
      decode_log   [type="ethabidecodelog"
                    abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                    data="$(jobRun.logData)"
                    topics="$(jobRun.logTopics)"]

      decode_cbor  [type="cborparse" data="$(decode_log.data)"]
      pub_sub        [type="bridge" name="cl-ea-mqtt-client" requestData="{\\"id\\":$(jobSpec.externalJobID), \\"data\\":{\\"action\\": $(decode_cbor.action), \\"topic\\": $(decode_cbor.topic), \\"qos\\": $(decode_cbor.qos), \\"payload\\": $(decode_cbor.payload), \\"retain\\": $(decode_cbor.retain)}}"]
      parse        [type="jsonparse" path="data,0,payload,value" data="$(pub_sub)"]
      encode_data  [type="ethabiencode" abi="(uint256 returnInt)" data="{ \\"returnInt\\": $(parse) }"]
      encode_tx    [type="ethabiencode"
                    abi="fulfillOracleRequest(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes32 data)"
                    data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                  ]
      submit_tx    [type="ethtx" to="0xORACLE_CONTRACT_ADDRESS" data="$(encode_tx)"]

      decode_log -> decode_cbor -> pub_sub-> parse -> encode_data -> encode_tx -> submit_tx
  """